package com.github.ppotseluev.algorate.trader.app

import com.github.ppotseluev.algorate.TradingAsset

object Assets {

  val sharesIds: List[String] = List(
    "BBG000WCFV84",
    "BBG001WWJTK5",
    "BBG000BJNGN9",
    "BBG000QDVR53",
    "BBG00LV3NRG0",
    "BBG000BFL116",
    "BBG005PXTR70",
    "BBG009T22D49",
    "BBG008P7F869",
    "BBG000M1R011",
    "BBG000CL9VN6",
    "BBG0043BYPB8",
    "BBG007Z9V591",
    "BBG000BJGGV8",
    "BBG000BCMBG4",
    "BBG000BHKYH4",
    "BBG000P1K2X6",
    "BBG003LFWP05",
    "BBG000BXMFC3",
    "BBG001Y2XS07",
    "BBG00P4R3079",
    "BBG0016T3GQ0",
    "BBG000BCMWM1",
    "BBG000BRNLL2",
    "BBG000C0LW92",
    "BBG000BV6R84",
    "BBG000BVLRY8",
    "BBG00S1HJ3M8",
    "BBG002293PJ4",
    "BBG000BGD7W6",
    "BBG000BZ9223",
    "BBG000GRZDV1",
    "BBG00QVJYGM9",
    "BBG000BN5HF7",
    "BBG000TRJ294",
    "BBG001J2QYS9",
    "BBG000CPBCL8",
    "BBG006DZTJ56",
    "BBG000BM6N47",
    "BBG002Q7J5Z1",
    "BBG00LSD4456",
    "BBG000PLF6N0",
    "BBG00LJYS1P8",
    "BBG000BBGGQ1",
    "BBG000BJX8C8",
    "BBG000BC1L02",
    "BBG000C2YHG9",
    "BBG00JM7QBR6",
    "BBG000PRJ2Z9",
    "BBG000C4HKK2",
    "BBG0046L1KL9",
    "BBG000BT5PG5",
    "BBG00B6G7GL7",
    "BBG000MQ1SN9",
    "BBG000HSLV70",
    "BBG000BV0VK7",
    "BBG00B8N0HG1",
    "BBG00LPTHYD5",
    "BBG000BNF508",
    "BBG0014XR0N5",
    "BBG000CZ8W54",
    "BBG000BRD0D8",
    "BBG000VC0T95",
    "BBG000N7MXL8",
    "BBG0113JGQF0",
    "BBG004M9ZHX5",
    "BBG000BJW241",
    "BBG005H82GB2",
    "BBG000BCWCG1",
    "BBG00GBVBK51",
    "BBG000BCTLF6",
    "BBG000N7MZ06",
    "BBG00LW7YK82",
    "BBG004MN1R41",
    "BBG000C90DH9",
    "BBG000BYYLS8",
    "BBG000BV4DR6",
    "BBG000BN53G7",
    "BBG000P5LMQ0",
    "BBG000M44VW8",
    "BBG000N2HDY5",
    "BBG00JG0FFZ2",
    "BBG00FYCQ352",
    "BBG000BVPV84",
    "BBG000FTLBV7",
    "BBG001YV1SM4",
    "BBG000QTFDQ4",
    "BBG000BTQR96",
    "BBG000BBGQF1",
    "BBG000D2ZTS8",
    "BBG000FSMWC3",
    "BBG000J0D904",
    "BBG004S68CP5",
    "BBG000PTLGZ1",
    "BBG000C0G1D1",
    "BBG000C2V3D6",
    "BBG000BWCKB6",
    "BBG00R45JYB7",
    "BBG001KY4N87",
    "BBG006473QX9",
    "BBG000BCVG28",
    "BBG00C6H6D40",
    "BBG000BH5DV1",
    "BBG00FQ8T4G3",
    "BBG001LFLZZ1",
    "BBG000BPYD87",
    "BBG000BKH263",
    "BBG0029SNR63",
    "BBG001MC8YF7",
    "BBG000BGZT72",
    "BBG007GJ2F81",
    "BBG000C1BCK2",
    "BBG000BHG9K0",
    "BBG00DL8NMV2",
    "BBG000QY4ZD0",
    "BBG000BQHGR6",
    "BBG000QGWY50",
    "BBG000BKLH74",
    "BBG000D7HF89",
    "BBG000D8RG11",
    "BBG000BM0QL7",
    "BBG000DQTXY6",
    "BBG009S3NB30",
    "BBG000BSXQV7",
    "BBG000BPMH90",
    "BBG000BHB3M6",
    "BBG000BM9RH1",
    "BBG0084BBZY6",
    "BBG000JWD753",
    "BBG008N298Y8",
    "BBG000BVWLJ6",
    "BBG000D13GN8",
    "BBG000BL79J3",
    "BBG00VSH86G4",
    "BBG000DQN9R3",
    "BBG009DFHWG6",
    "BBG000H8TVT2",
    "BBG000BCG930",
    "BBG001K003W2",
    "BBG000BV95H9",
    "BBG000BWMX63",
    "BBG000J094P3",
    "BBG006FCB019",
    "BBG000BKTFN2",
    "BBG000C8H633",
    "BBG00JRH1P95",
    "BBG00441QMJ7",
    "BBG000CL1FG7",
    "BBG000B9ZV28",
    "BBG001R3MNY9",
    "BBG000D0SMY8",
    "BBG001J1BQ86",
    "BBG000QP35H2",
    "BBG00GCTWDJ3",
    "BBG000BH5LT6",
    "BBG00G2HHYD7",
    "BBG00NNW8JK1",
    "BBG000N7KJX8",
    "BBG00HVQF9K2",
    "BBG000BMWKC5",
    "BBG000PSJMV7",
    "BBG0073F9RT7",
    "BBG004S68598",
    "BBG0098VVDT9",
    "BBG000BMNBY1",
    "BBG000BX9WL1",
    "BBG000G8N9C6",
    "BBG000PN9NB9",
    "BBG005DJFD43",
    "BBG000PCQQL6",
    "BBG003PS7JV1",
    "BBG00P19DKZ6",
    "BBG009J8K7M0",
    "BBG000DS5588",
    "BBG000C2D1C1",
    "BBG000BT41Q8",
    "BBG000BX2YN2",
    "BBG000RKXRQ1",
    "BBG000GPXKX9",
    "BBG000J3D1Y8",
    "BBG000BLMZK6",
    "BBG017TGV7M2",
    "BBG00CBYY6M1",
    "BBG0077VNXV6",
    "BBG000F1ZSQ2",
    "BBG0029ZX840",
    "BBG000BNPS52",
    "BBG000BD0TF8",
    "BBG000CX0P89",
    "BBG000BWGYF8",
    "BBG005XVXML5",
    "BBG000BRXP69",
    "BBG000DVB833",
    "BBG004TPGBP5",
    "BBG000K4ND22",
    "BBG001D0HB36",
    "BBG000BKXYX5",
    "BBG000BFSND8",
    "BBG000BP1Q11",
    "BBG000TYXCT9",
    "BBG000C42WS4",
    "BBG000BXM6V2",
    "BBG000BSV0W5",
    "BBG000R7XX87",
    "BBG000BP30Y0",
    "BBG000BXRPH1",
    "BBG000BRVKH0",
    "BBG00212PVZ5",
    "BBG000CKVSG8",
    "BBG000BLRP41",
    "BBG000L5CJF3",
    "BBG000C7TF41",
    "BBG000DY6735",
    "BBG000BVV7G1",
    "BBG00XK3WVD0",
    "BBG000BPWGR1",
    "BBG000BBBNC6",
    "BBG000L8CBX4",
    "BBG000BSFRF3",
    "BBG000BLZRJ2",
    "BBG000BD8PN9",
    "BBG001Y04TN6",
    "BBG000BH4R78",
    "BBG000BTT3D1",
    "BBG007TJF1N7",
    "BBG000BJKPG0",
    "BBG000BLKK03",
    "BBG000BVXC87",
    "BBG000BHX7N2",
    "BBG0134WCM78",
    "BBG000BLCPY4",
    "BBG001ZZPQJ6",
    "BBG000C4SKT1",
    "BBG000BBDZG3",
    "BBG008HD3V85",
    "BBG002B04MT8"
  )

  val cryptocurrencies: List[TradingAsset] = List(
    "FUN",
    "HBAR",
    "MFT",
    "ARPA",
    "ICX",
    "FET",
    "FIL",
    "NKN",
    "STX",
    "WAN",
    "MITH",
    "QTUM",
    "COS",
    "BEAM",
    "BCH",
    "MTL",
    "OMG",
    "BTT",
    "RLC",
    "LTC",
    "KAVA",
    "XTZ",
    "AVAX",
    "MKR",
    "HOT",
    "LINK",
    "TCT",
    "DUSK",
    "PERL",
    "MATIC",
    "DENT",
    "BNT",
    "FTT",
    "THETA",
    "NANO",
    "IOTX",
    "ONT",
    "DREP",
    "ZEC",
    "GTO",
    "SOL",
    "XLM",
    "DOCK",
    "AAVE",
    "WIN",
    "VITE",
    "VET",
    "EOS",
    "ONG"
  ).map(TradingAsset.crypto)

  val restCryptocurrencies = List(
    "1INCH",
    "AAVE",
    "ACA",
    "ACH",
    "ACM",
    "ADA",
    "ADX",
    "AGIX",
    "AGLD",
    "AION",
    "AKRO",
    "ALCX",
    "ALGO",
    "ALICE",
    "ALPACA",
    "ALPHA",
    "ALPINE",
    "AMB",
    "AMP",
    "ANC",
    "ANKR",
    "ANT",
    "ANY",
    "APE",
    "API3",
    "APT",
    "ARB",
    "ARDR",
    "ARPA",
    "AR",
    "ASR",
    "ASTR",
    "ATA",
    "ATM",
    "ATOM",
    "AUCTION",
    "AUDIO",
    "AUD",
    "AUTO",
    "AVA",
    "AVAX",
    "AXS",
    "BADGER",
    "BAKE",
    "BAL",
    "BAND",
    "BAR",
    "BAT",
    "BCC",
    "BCHABC",
    "BCHSV",
    "BCH",
    "BEAM",
    //    "BEAR",
    "BEL",
    "BETA",
    "BETH",
    "BICO",
    "BIFI",
    "BKRW",
    "BLZ",
    "BNB",
    "BNT",
    "BNX",
    "BOND",
    "BSW",
    "BTCST",
    "BTC",
    "BTG",
    "BTS",
    "BTTC",
    "BTT",
    //    "BULL",
    "BURGER",
    "BZRX",
    "C98",
    "CAKE",
    "CELO",
    "CELR",
    "CFX",
    "CHESS",
    "CHR",
    "CHZ",
    "CITY",
    "CKB",
    "CLV",
    "COCOS",
    "COMP",
    "COS",
    "COTI",
    "CRV",
    "CTK",
    "CTSI",
    "CTXC",
    "CVC",
    "CVP",
    "CVX",
    "DAI",
    "DAR",
    "DASH",
    "DATA",
    "DCR",
    "DEGO",
    "DENT",
    "DEXE",
    "DF",
    "DGB",
    "DIA",
    "DNT",
    "DOCK",
    "DODO",
    "DOGE",
    "DOT",
    "DREP",
    "DUSK",
    "DYDX",
    "EGLD",
    "ELF",
    "ENJ",
    "ENS",
    "EOS",
    "EPS",
    "EPX",
    "ERD",
    "ERN",
    "ETC",
    "ETH",
    "FARM",
    "FET",
    "FIDA",
    "FIL",
    "FIO",
    "FIRO",
    "FIS",
    "FLM",
    "FLOW",
    "FLUX",
    "FORTH",
    "FOR",
    "FRONT",
    "FTM",
    "FTT",
    "FUN",
    "FXS",
    "GALA",
    "GAL",
    "GAS",
    "GBP",
    "GHST",
    "GLMR",
    "GLM",
    "GMT",
    "GMX",
    "GNO",
    "GNS",
    "GRT",
    "GTC",
    "GTO",
    "GXS",
    "HARD",
    "HBAR",
    "HC",
    "HFT",
    "HIFI",
    "HIGH",
    "HIVE",
    "HNT",
    "HOOK",
    "HOT",
    "ICP",
    "ICX",
    "IDEX",
    "ID",
    "ILV",
    "IMX",
    "INJ",
    "IOST",
    "IOTA",
    "IOTX",
    "IRIS",
    "JASMY",
    "JOE",
    "JST",
    "JUV",
    "KAVA",
    "KDA",
    "KEEP",
    "KEY",
    "KLAY",
    "KMD",
    "KNC",
    "KP3R",
    "KSM",
    "LAZIO",
    "LDO",
    "LEND",
    "LEVER",
    "LINA",
    "LINK",
    "LIT",
    "LOKA",
    "LOOM",
    "LPT",
    "LQTY",
    "LRC",
    "LSK",
    "LTC",
    "LTO",
    "LUNA",
    "LUNC",
    "MAGIC",
    "MANA",
    "MASK",
    "MATIC",
    "MBL",
    "MBOX",
    "MCO",
    "MC",
    "MDT",
    "MDX",
    "MFT",
    "MINA",
    "MIR",
    "MITH",
    "MKR",
    "MLN",
    "MOB",
    "MOVR",
    "MTL",
    "MULTI",
    "NANO",
    "NBS",
    "NBT",
    "NEAR",
    "NEBL",
    "NEO",
    "NEXO",
    "NKN",
    "NMR",
    "NPXS",
    "NULS",
    "NU",
    "OAX",
    "OCEAN",
    "OGN",
    "OG",
    "OMG",
    "OM",
    "ONE",
    "ONG",
    "ONT",
    "OOKI",
    "OP",
    "ORN",
    "OSMO",
    "OXT",
    "PAXG",
    "PAX",
    "PEOPLE",
    "PERL",
    "PERP",
    "PHA",
    "PHB",
    "PLA",
    "PNT",
    "POLS",
    "POLY",
    "POLYX",
    "POND",
    "PORTO",
    "POWR",
    "PROM",
    "PROS",
    "PSG",
    "PUNDIX",
    "PYR",
    "QI",
    "QKC",
    "QNT",
    "QTUM",
    "QUICK",
    "RAD",
    "RAMP",
    "RARE",
    "RAY",
    "RDNT",
    "REEF",
    "REI",
    "REN",
    "REP",
    "REQ",
    "RGT",
    "RIF",
    "RLC",
    "RNDR",
    "ROSE",
    "RPL",
    "RSR",
    "RUNE",
    "RVN",
    "SAND",
    "SANTOS",
    "SCRT",
    "SC",
    "SFP",
    "SHIB",
    "SKL",
    "SLP",
    "SNX",
    "SOL",
    "SPELL",
    "SRM",
    "SSV",
    "STEEM",
    "STG",
    "STMX",
    "STORJ",
    "STORM",
    "STPT",
    "STRAT",
    "STRAX",
    "STX",
    "SUN",
    "SUPER",
    "SUSHI",
    "SXP",
    "SYN",
    "SYS",
    "TCT",
    "TFUEL",
    "THETA",
    "TKO",
    "TLM",
    "TOMO",
    "TORN",
    "TRB",
    "TRIBE",
    "TROY",
    "TRU",
    "TRX",
    "TVK",
    "TWT",
    "UFT",
    "UMA",
    "UNFI",
    "UNI",
    "UTK",
    "VEN",
    "VET",
    "VGX",
    "VIB",
    "VIDT",
    "VITE",
    "VOXEL",
    "VTHO",
    "WAN",
    "WAVES",
    "WAXP",
    "WING",
    "WIN",
    "WNXM",
    "WOO",
    "WRX",
    "WTC",
    "XEC",
    "XEM",
    "XLM",
    "XMR",
    "XNO",
    "XRP",
    "XTZ",
    "XVG",
    "XVS",
    "XZC",
    "YFII",
    "YFI",
    "YGG",
    "ZEC",
    "ZEN",
    "ZIL",
    "ZRX"
  ).map(TradingAsset.crypto).filterNot(cryptocurrencies.contains)

  val allCryptocurrencies: List[TradingAsset] = cryptocurrencies ++ restCryptocurrencies
  val testnetAssets: List[TradingAsset] = List(
    "LTC",
    "XRP",
    "TRX",
    "ETH",
    "BTC",
    "BNB"
  ).map(TradingAsset.crypto)

}
